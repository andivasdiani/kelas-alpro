import math
import numpy as np
import matplotlib.pyplot as plt

MAX = 10000

def a_drag(v):
    val = c_1 + c_2 / (1 + np.exp((v - v_d) / delta))
    val *= np.exp(-altitude / y_0)
    return val

def propagate():
    i = 0
    while y[i] >= 0.0 and x[i] <= 120.0:
        v = np.sqrt((v_x[i] - v_wind) ** 2 + v_y[i] ** 2)
        plt.plot(x[i], y[i], 'bo')  # plot the current point
        x[i + 1] = x[i] + v_x[i] * dt
        y[i + 1] = y[i] + v_y[i] * dt
        v_x[i + 1] = v_x[i] - a_drag(v) * v * (v_x[i] - v_wind) * dt
        v_y[i + 1] = v_y[i] - a_drag(v) * v * v_y[i] * dt - g * dt
        i += 1

# Initialize variables
x = np.zeros(MAX)
y = np.zeros(MAX)
t = np.zeros(MAX)
v_x = np.zeros(MAX)
v_y = np.zeros(MAX)

n_points = 0
mass = 0.0
C_drag = 0.0
area = 0.0
A_drag = 0.0
g = 0.0
dt = 0.0

c_1, c_2, v_d, delta = 0.0, 0.0, 0.0, 0.0
d_1, d_2, v_d_2, delta_2 = 0.0, 0.0, 0.0, 0.0
altitude, y_0 = 0.0, 0.0
v_wind = 0.0

# Adjusted values for parabolic trajectory
x[0] = 0.0
y[0] = 0.0
# Adjusted initial velocity components for a parabolic trajectory with max height 30.0
v_x[0] = 40.0  # Adjust as needed
v_y[0] = 30.0  # Adjust as needed

# Rest of the initialization remains unchanged
n_points = 0
dt = 0.001
t[0] = 0.0
v_wind = -10.0 * 0.300

c_1 = 0.0039
c_2 = 0.0058
v_d = 41.0
delta = 5.0
d_1 = 0.0047
d_2 = 0.0041
v_d_2 = 38.0
delta_2 = 5.0
g = 9.8
altitude = 0.0
y_0 = 30.0  # Changed to 30.0 for parabola shape

# Propagate the trajectory
propagate()

# Plotting
plt.title("Trajectory of a Batted Base Ball")
plt.xlabel("x (m)")
plt.ylabel("y (m)")
plt.grid(True)
plt.show()
